#!/bin/sh /etc/rc.common
# Copyright (C) 2015 OpenWrt.org

START=80
USE_PROCD=1

dyn_src_dir=/etc/nginx/conf.d
dyn_dst_dir=/var/etc/nginx/conf.d

render_dynconf() {
	local conf="$1"
	# Remove generated conf files that don't have a corresponding dynconf file
	find $dyn_dst_dir \
		-name '*.conf' \
		| while read -r dst; do
			src=$dyn_src_dir/${dst#"$dyn_dst_dir/"}
			src=${src%.conf}.dynconf
			if [ ! -x "$src" ]; then
				rm -r "$dst"
			fi
		done

	# Make sure network functions return up-to-date values
	. /lib/functions/network.sh
	network_flush_cache

	# Generate conf files from dynconf files
	find $dyn_src_dir \
		-name '*.dynconf' \
		-exec test -x {} \; \
		-print \
		| while read -r src; do
			dst=$dyn_dst_dir/${src#"$dyn_src_dir/"}
			dst=${dst%.dynconf}.conf
			content=$("$src")
			case $? in
			0)
				mkdir -p "$(dirname "$dst")"
				echo "$content" >"$dst"
				;;
			1) rm -rf "$dst" ;;
			*) logger -t nginx -p daemon.err -s "Faild to render dynamic config from $src" ;;
			esac
		done

	local msg
	msg=$(/usr/sbin/nginx -t -c "$conf" -g 'daemon off;' 2>&1)
	if [ $? != 0 ]; then
		{
			echo "Invalid config file, not using it:"
			echo "$msg"
		} | logger -t "nginx" -p "daemon.err"
		exit 1
	fi
}

start_service() {
	# TODO: For backward compatibility with nginx-util generated conf
	# Remove once it should no longer be supported
	local conf=/etc/nginx/uci.conf
	if [ ! -e "$conf" ]; then
		conf=/etc/nginx/nginx.conf
	fi
	mkdir -p \
		/var/lib/nginx \
		/var/log/nginx
	render_dynconf "$conf"

	procd_open_instance
	procd_set_param command /usr/sbin/nginx -c "$conf" -g 'daemon off;'
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_set_param respawn
	procd_close_instance
}

reload_service() {
	rc_procd start_service
	procd_send_signal nginx
}

service_triggers() {
	# Reload without re-generating dynamic configs on acme renew
	procd_add_raw_trigger acme.renew 5000 /usr/sbin/nginx -s reload
	# Re-generating and reload dynamic configs on iface change
	procd_add_raw_trigger iface 1000 /etc/init.d/nginx reload
}

extra_command "relog" "Reopen log files (without reloading)"
relog() {
	mkdir -p /var/log/nginx
	procd_send_signal nginx '*' USR1
}
